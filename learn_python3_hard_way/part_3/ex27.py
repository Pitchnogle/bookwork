print("Bitwise AND:")
print("0 & 0 == {}".format(0 & 0))
print("0 & 1 == {}".format(0 & 1))
print("1 & 0 == {}".format(1 & 0))
print("1 & 1 == {}".format(1 & 1))
print()

print("Bitwise OR:")
print("0 | 0 == {}".format(0 | 0))
print("0 | 1 == {}".format(0 | 1))
print("1 | 0 == {}".format(1 | 0))
print("1 | 1 == {}".format(1 | 1))
print()

print("Bitwise XOR:")
print("0 ^ 0 == {}".format(0 ^ 0))
print("0 ^ 1 == {}".format(0 ^ 1))
print("1 ^ 0 == {}".format(1 ^ 0))
print("1 ^ 1 == {}".format(1 ^ 1))
print()

print("Bitwise NOT:")
print("~0 == {}".format(~0))
print("~1 == {}".format(~1))
print()

print("Bitwise shift left:")
print("1 << 1 == {}".format(1 << 1))
print("1 << 2 == {}".format(1 << 2))
print("1 << 3 == {}".format(1 << 3))
print("1 << 4 == {}".format(1 << 4))
print("1 << 5 == {}".format(1 << 5))
print("1 << 6 == {}".format(1 << 6))
print("1 << 7 == {}".format(1 << 7))
print()

print("Bitwise shift right")
print("128 >> 1 == {}".format(128 >> 1))
print("128 >> 2 == {}".format(128 >> 2))
print("128 >> 3 == {}".format(128 >> 3))
print("128 >> 4 == {}".format(128 >> 4))
print("128 >> 5 == {}".format(128 >> 5))
print("128 >> 6 == {}".format(128 >> 6))
print("128 >> 7 == {}".format(128 >> 7))
print()

def xor(a, b):
    return (a and not b) or (not a and b)

print("Logical XOR:")
print("False xor False == {}".format(xor(False, False)))
print("False xor True == {}".format(xor(False, True)))
print("True xor False == {}".format(xor(True, False)))
print("True xor True == {}".format(xor(True, True)))
